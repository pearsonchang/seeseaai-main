{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50604051620013a4380380620013a48339810160408190526200003491620003b3565b336040518060400160405280600c81526020016b29b2b2b9b2b0902a37b5b2b760a11b815250604051806040016040528060048152602001635353414960e01b815250816003908162000088919062000489565b50600462000097828262000489565b50506005805460ff19169055506001600160a01b038116620000d457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b620000df816200011b565b50620000eb8162000175565b6200011481620000fe6012600a6200066a565b6200010e906305f5e1006200067b565b620001b9565b50620006ab565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200017f620001f7565b6001600160a01b038116620001ab57604051631e4fbdf760e01b815260006004820152602401620000cb565b620001b6816200011b565b50565b6001600160a01b038216620001e55760405163ec442f0560e01b815260006004820152602401620000cb565b620001f3600083836200022e565b5050565b6005546001600160a01b036101009091041633146200022c5760405163118cdaa760e01b8152336004820152602401620000cb565b565b620002386200024a565b620002458383836200026f565b505050565b60055460ff16156200022c5760405163d93c066560e01b815260040160405180910390fd5b620002796200024a565b620002458383836001600160a01b038316620002af578060026000828254620002a3919062000695565b90915550620003239050565b6001600160a01b03831660009081526020819052604090205481811015620003045760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000cb565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620003415760028054829003905562000360565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620003a691815260200190565b60405180910390a3505050565b600060208284031215620003c657600080fd5b81516001600160a01b0381168114620003de57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200041057607f821691505b6020821081036200043157634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200024557600081815260208120601f850160051c81016020861015620004605750805b601f850160051c820191505b8181101562000481578281556001016200046c565b505050505050565b81516001600160401b03811115620004a557620004a5620003e5565b620004bd81620004b68454620003fb565b8462000437565b602080601f831160018114620004f55760008415620004dc5750858301515b600019600386901b1c1916600185901b17855562000481565b600085815260208120601f198616915b82811015620005265788860151825594840194600190910190840162000505565b5085821015620005455787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620005ac57816000190482111562000590576200059062000555565b808516156200059e57918102915b93841c939080029062000570565b509250929050565b600082620005c55750600162000664565b81620005d45750600062000664565b8160018114620005ed5760028114620005f85762000618565b600191505062000664565b60ff8411156200060c576200060c62000555565b50506001821b62000664565b5060208310610133831016604e8410600b84101617156200063d575081810a62000664565b6200064983836200056b565b806000190482111562000660576200066062000555565b0290505b92915050565b6000620003de60ff841683620005b4565b808202811582820484141762000664576200066462000555565b8082018082111562000664576200066462000555565b610ce980620006bb6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635c975abb116100b857806395d89b411161007c57806395d89b41146102795780639a06b113146102815780639dc29fac14610289578063a9059cbb1461029c578063dd62ed3e146102af578063f2fde38b146102e857600080fd5b80635c975abb1461021f57806370a082311461022a578063715018a6146102535780638456cb591461025b5780638da5cb5b1461026357600080fd5b8063313ce567116100ff578063313ce567146101cd5780633f4ba83a146101dc5780633fc8cef3146101e657806340c10f19146101f957806349bd5a5e1461020c57600080fd5b806306fdde031461013c578063095ea7b31461015a5780631694505e1461017d57806318160ddd146101a857806323b872dd146101ba575b600080fd5b6101446102fb565b6040516101519190610b0e565b60405180910390f35b61016d610168366004610b71565b61038d565b6040519015158152602001610151565b600654610190906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6002545b604051908152602001610151565b61016d6101c8366004610b9d565b6103a7565b60405160128152602001610151565b6101e46103cb565b005b600754610190906001600160a01b031681565b6101e4610207366004610b71565b6103dd565b600854610190906001600160a01b031681565b60055460ff1661016d565b6101ac610238366004610bde565b6001600160a01b031660009081526020819052604090205490565b6101e46103f3565b6101e4610405565b60055461010090046001600160a01b0316610190565b610144610415565b6101e4610424565b6101e4610297366004610b71565b6105cd565b61016d6102aa366004610b71565b6105df565b6101ac6102bd366004610c02565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101e46102f6366004610bde565b6105ed565b60606003805461030a90610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461033690610c3b565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b60003361039b818585610630565b60019150505b92915050565b6000336103b5858285610642565b6103c08585856106c0565b506001949350505050565b6103d361071f565b6103db610752565b565b6103e561071f565b6103ef82826107a4565b5050565b6103fb61071f565b6103db60006107da565b61040d61071f565b6103db610834565b60606004805461030a90610c3b565b61042c61071f565b600680546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190610c75565b600780546001600160a01b0319166001600160a01b039283161790556006546040805163c45a015560e01b81529051919092169163c45a01559160048083019260209291908290030181865afa158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190610c75565b6007546040516364e329cb60e11b81523060048201526001600160a01b03918216602482015291169063c9c65396906044016020604051808303816000875af1158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610c75565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6105d561071f565b6103ef8282610871565b60003361039b8185856106c0565b6105f561071f565b6001600160a01b03811661062457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61062d816107da565b50565b61063d83838360016108a7565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106ba57818110156106ab57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161061b565b6106ba848484840360006108a7565b50505050565b6001600160a01b0383166106ea57604051634b637e8f60e11b81526000600482015260240161061b565b6001600160a01b0382166107145760405163ec442f0560e01b81526000600482015260240161061b565b61063d83838361097c565b6005546001600160a01b036101009091041633146103db5760405163118cdaa760e01b815233600482015260240161061b565b61075a61098f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166107ce5760405163ec442f0560e01b81526000600482015260240161061b565b6103ef6000838361097c565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61083c6109b2565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107873390565b6001600160a01b03821661089b57604051634b637e8f60e11b81526000600482015260240161061b565b6103ef8260008361097c565b6001600160a01b0384166108d15760405163e602df0560e01b81526000600482015260240161061b565b6001600160a01b0383166108fb57604051634a1406b160e11b81526000600482015260240161061b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156106ba57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161096e91815260200190565b60405180910390a350505050565b6109846109b2565b61063d8383836109d6565b60055460ff166103db57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103db5760405163d93c066560e01b815260040160405180910390fd5b6109de6109b2565b61063d8383836001600160a01b038316610a0f578060026000828254610a049190610c92565b90915550610a819050565b6001600160a01b03831660009081526020819052604090205481811015610a625760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161061b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a9d57600280548290039055610abc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610b3b57858101830151858201604001528201610b1f565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461062d57600080fd5b60008060408385031215610b8457600080fd5b8235610b8f81610b5c565b946020939093013593505050565b600080600060608486031215610bb257600080fd5b8335610bbd81610b5c565b92506020840135610bcd81610b5c565b929592945050506040919091013590565b600060208284031215610bf057600080fd5b8135610bfb81610b5c565b9392505050565b60008060408385031215610c1557600080fd5b8235610c2081610b5c565b91506020830135610c3081610b5c565b809150509250929050565b600181811c90821680610c4f57607f821691505b602082108103610c6f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610c8757600080fd5b8151610bfb81610b5c565b808201808211156103a157634e487b7160e01b600052601160045260246000fdfea2646970667358221220bfce8a5a3f22d8309b32777065a187bbd62671e3b8f0509514307f9c261fdc2964736f6c63430008140033",
    "sourceMap": "389:3043:40:-:0;;;1329:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1417:10;1896:113:27;;;;;;;;;;;;;-1:-1:-1;;;1896:113:27;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:27;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:27;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1231:7:36;:15;;-1:-1:-1;;1231:15:36;;;-1:-1:-1;;;;;;1273:26:25;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:25;;1350:1;1322:31;;;3176:51:49;3149:18;;1322:31:25;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1440:31:40::2;1458:12:::0;1440:17:::2;:31::i;:::-;1482:51;1488:12:::0;1516:16:::2;3075:2:27::0;1516::40::2;:16;:::i;:::-;1502:30;::::0;:11:::2;:30;:::i;:::-;1482:5;:51::i;:::-;1329:212:::0;389:3043;;2912:187:25;3004:6;;;-1:-1:-1;;;;;3020:17:25;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:25;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2543:215::-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:25;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:25;;2700:1:::1;2672:31;::::0;::::1;3176:51:49::0;3149:18;;2672:31:25::1;3030:203:49::0;2623:91:25::1;2723:28;2742:8:::0;2723:18:::1;:28::i;:::-;2543:215:::0;:::o;7721:208:27:-;-1:-1:-1;;;;;7791:21:27;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:27;;7864:1;7835:32;;;3176:51:49;3149:18;;7835:32:27;3030:203:49;7787:91:27;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;1796:162:25:-;1710:6;;-1:-1:-1;;;;;1710:6:25;;;;;735:10:35;1855:23:25;1851:101;;1901:40;;-1:-1:-1;;;1901:40:25;;735:10:35;1901:40:25;;;3176:51:49;3149:18;;1901:40:25;3030:203:49;1851:101:25;1796:162::o;3226:203:40:-;1474:19:36;:17;:19::i;:::-;3391:30:40::1;3405:4:::0;3411:2;3415:5;3391:13:::1;:30::i;:::-;3226:203:::0;;;:::o;2002:128:36:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:36;;;;;;;;;;;1112:145:30;1474:19:36;:17;:19::i;:::-;1220:30:30::1;1234:4:::0;1240:2;1244:5;-1:-1:-1;;;;;6360:18:27;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:27;;-1:-1:-1;6356:540:27;;-1:-1:-1;;;;;6570:15:27;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:27;;-1:-1:-1;;;;;5276:32:49;;6649:50:27;;;5258:51:49;5325:18;;;5318:34;;;5368:18;;;5361:34;;;5231:18;;6649:50:27;5056:345:49;6599:115:27;-1:-1:-1;;;;;6834:15:27;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:27;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:27;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:27;7355:4;-1:-1:-1;;;;;7346:25:27;;7365:5;7346:25;;;;5552::49;;5540:2;5525:18;;5406:177;7346:25:27;;;;;;;;6271:1107;;;:::o;14:290:49:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:49;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:49:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:545::-;1054:2;1049:3;1046:11;1043:448;;;1090:1;1115:5;1111:2;1104:17;1160:4;1156:2;1146:19;1230:2;1218:10;1214:19;1211:1;1207:27;1201:4;1197:38;1266:4;1254:10;1251:20;1248:47;;;-1:-1:-1;1289:4:49;1248:47;1344:2;1339:3;1335:12;1332:1;1328:20;1322:4;1318:31;1308:41;;1399:82;1417:2;1410:5;1407:13;1399:82;;;1462:17;;;1443:1;1432:13;1399:82;;;1403:3;;;952:545;;;:::o;1673:1352::-;1793:10;;-1:-1:-1;;;;;1815:30:49;;1812:56;;;1848:18;;:::i;:::-;1877:97;1967:6;1927:38;1959:4;1953:11;1927:38;:::i;:::-;1921:4;1877:97;:::i;:::-;2029:4;;2093:2;2082:14;;2110:1;2105:663;;;;2812:1;2829:6;2826:89;;;-1:-1:-1;2881:19:49;;;2875:26;2826:89;-1:-1:-1;;1630:1:49;1626:11;;;1622:24;1618:29;1608:40;1654:1;1650:11;;;1605:57;2928:81;;2075:944;;2105:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2141:20:49;;;2259:236;2273:7;2270:1;2267:14;2259:236;;;2362:19;;;2356:26;2341:42;;2454:27;;;;2422:1;2410:14;;;;2289:19;;2259:236;;;2263:3;2523:6;2514:7;2511:19;2508:201;;;2584:19;;;2578:26;-1:-1:-1;;2667:1:49;2663:14;;;2679:3;2659:24;2655:37;2651:42;2636:58;2621:74;;2508:201;-1:-1:-1;;;;;2755:1:49;2739:14;;;2735:22;2722:36;;-1:-1:-1;1673:1352:49:o;3238:127::-;3299:10;3294:3;3290:20;3287:1;3280:31;3330:4;3327:1;3320:15;3354:4;3351:1;3344:15;3370:422;3459:1;3502:5;3459:1;3516:270;3537:7;3527:8;3524:21;3516:270;;;3596:4;3592:1;3588:6;3584:17;3578:4;3575:27;3572:53;;;3605:18;;:::i;:::-;3655:7;3645:8;3641:22;3638:55;;;3675:16;;;;3638:55;3754:22;;;;3714:15;;;;3516:270;;;3520:3;3370:422;;;;;:::o;3797:806::-;3846:5;3876:8;3866:80;;-1:-1:-1;3917:1:49;3931:5;;3866:80;3965:4;3955:76;;-1:-1:-1;4002:1:49;4016:5;;3955:76;4047:4;4065:1;4060:59;;;;4133:1;4128:130;;;;4040:218;;4060:59;4090:1;4081:10;;4104:5;;;4128:130;4165:3;4155:8;4152:17;4149:43;;;4172:18;;:::i;:::-;-1:-1:-1;;4228:1:49;4214:16;;4243:5;;4040:218;;4342:2;4332:8;4329:16;4323:3;4317:4;4314:13;4310:36;4304:2;4294:8;4291:16;4286:2;4280:4;4277:12;4273:35;4270:77;4267:159;;;-1:-1:-1;4379:19:49;;;4411:5;;4267:159;4458:34;4483:8;4477:4;4458:34;:::i;:::-;4528:6;4524:1;4520:6;4516:19;4507:7;4504:32;4501:58;;;4539:18;;:::i;:::-;4577:20;;-1:-1:-1;3797:806:49;;;;;:::o;4608:140::-;4666:5;4695:47;4736:4;4726:8;4722:19;4716:4;4695:47;:::i;4753:168::-;4826:9;;;4857;;4874:15;;;4868:22;;4854:37;4844:71;;4895:18;;:::i;4926:125::-;4991:9;;;5012:10;;;5009:36;;;5025:18;;:::i;5406:177::-;389:3043:40;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80635c975abb116100b857806395d89b411161007c57806395d89b41146102795780639a06b113146102815780639dc29fac14610289578063a9059cbb1461029c578063dd62ed3e146102af578063f2fde38b146102e857600080fd5b80635c975abb1461021f57806370a082311461022a578063715018a6146102535780638456cb591461025b5780638da5cb5b1461026357600080fd5b8063313ce567116100ff578063313ce567146101cd5780633f4ba83a146101dc5780633fc8cef3146101e657806340c10f19146101f957806349bd5a5e1461020c57600080fd5b806306fdde031461013c578063095ea7b31461015a5780631694505e1461017d57806318160ddd146101a857806323b872dd146101ba575b600080fd5b6101446102fb565b6040516101519190610b0e565b60405180910390f35b61016d610168366004610b71565b61038d565b6040519015158152602001610151565b600654610190906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6002545b604051908152602001610151565b61016d6101c8366004610b9d565b6103a7565b60405160128152602001610151565b6101e46103cb565b005b600754610190906001600160a01b031681565b6101e4610207366004610b71565b6103dd565b600854610190906001600160a01b031681565b60055460ff1661016d565b6101ac610238366004610bde565b6001600160a01b031660009081526020819052604090205490565b6101e46103f3565b6101e4610405565b60055461010090046001600160a01b0316610190565b610144610415565b6101e4610424565b6101e4610297366004610b71565b6105cd565b61016d6102aa366004610b71565b6105df565b6101ac6102bd366004610c02565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101e46102f6366004610bde565b6105ed565b60606003805461030a90610c3b565b80601f016020809104026020016040519081016040528092919081815260200182805461033690610c3b565b80156103835780601f1061035857610100808354040283529160200191610383565b820191906000526020600020905b81548152906001019060200180831161036657829003601f168201915b5050505050905090565b60003361039b818585610630565b60019150505b92915050565b6000336103b5858285610642565b6103c08585856106c0565b506001949350505050565b6103d361071f565b6103db610752565b565b6103e561071f565b6103ef82826107a4565b5050565b6103fb61071f565b6103db60006107da565b61040d61071f565b6103db610834565b60606004805461030a90610c3b565b61042c61071f565b600680546001600160a01b031916737a250d5630b4cf539739df2c5dacb4c659f2488d908117909155604080516315ab88c960e31b8152905163ad5c4648916004808201926020929091908290030181865afa158015610490573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b49190610c75565b600780546001600160a01b0319166001600160a01b039283161790556006546040805163c45a015560e01b81529051919092169163c45a01559160048083019260209291908290030181865afa158015610512573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105369190610c75565b6007546040516364e329cb60e11b81523060048201526001600160a01b03918216602482015291169063c9c65396906044016020604051808303816000875af1158015610587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ab9190610c75565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6105d561071f565b6103ef8282610871565b60003361039b8185856106c0565b6105f561071f565b6001600160a01b03811661062457604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61062d816107da565b50565b61063d83838360016108a7565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106ba57818110156106ab57604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161061b565b6106ba848484840360006108a7565b50505050565b6001600160a01b0383166106ea57604051634b637e8f60e11b81526000600482015260240161061b565b6001600160a01b0382166107145760405163ec442f0560e01b81526000600482015260240161061b565b61063d83838361097c565b6005546001600160a01b036101009091041633146103db5760405163118cdaa760e01b815233600482015260240161061b565b61075a61098f565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166107ce5760405163ec442f0560e01b81526000600482015260240161061b565b6103ef6000838361097c565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61083c6109b2565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586107873390565b6001600160a01b03821661089b57604051634b637e8f60e11b81526000600482015260240161061b565b6103ef8260008361097c565b6001600160a01b0384166108d15760405163e602df0560e01b81526000600482015260240161061b565b6001600160a01b0383166108fb57604051634a1406b160e11b81526000600482015260240161061b565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156106ba57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161096e91815260200190565b60405180910390a350505050565b6109846109b2565b61063d8383836109d6565b60055460ff166103db57604051638dfc202b60e01b815260040160405180910390fd5b60055460ff16156103db5760405163d93c066560e01b815260040160405180910390fd5b6109de6109b2565b61063d8383836001600160a01b038316610a0f578060026000828254610a049190610c92565b90915550610a819050565b6001600160a01b03831660009081526020819052604090205481811015610a625760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161061b565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610a9d57600280548290039055610abc565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b0191815260200190565b60405180910390a3505050565b600060208083528351808285015260005b81811015610b3b57858101830151858201604001528201610b1f565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b038116811461062d57600080fd5b60008060408385031215610b8457600080fd5b8235610b8f81610b5c565b946020939093013593505050565b600080600060608486031215610bb257600080fd5b8335610bbd81610b5c565b92506020840135610bcd81610b5c565b929592945050506040919091013590565b600060208284031215610bf057600080fd5b8135610bfb81610b5c565b9392505050565b60008060408385031215610c1557600080fd5b8235610c2081610b5c565b91506020830135610c3081610b5c565b809150509250929050565b600181811c90821680610c4f57607f821691505b602082108103610c6f57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610c8757600080fd5b8151610bfb81610b5c565b808201808211156103a157634e487b7160e01b600052601160045260246000fdfea2646970667358221220bfce8a5a3f22d8309b32777065a187bbd62671e3b8f0509514307f9c261fdc2964736f6c63430008140033",
    "sourceMap": "389:3043:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1188:14:49;;1181:22;1163:41;;1151:2;1136:18;4293:186:27;1023:187:49;737:41:40;;;;;-1:-1:-1;;;;;737:41:40;;;;;;-1:-1:-1;;;;;1407:32:49;;;1389:51;;1377:2;1362:18;737:41:40;1215:231:49;3144:97:27;3222:12;;3144:97;;;1597:25:49;;;1585:2;1570:18;3144:97:27;1451:177:49;5039:244:27;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2236:36:49;;2224:2;2209:18;3002:82:27;2094:184:49;2885:65:40;;;:::i;:::-;;785:19;;;;;-1:-1:-1;;;;;785:19:40;;;2587:101;;;;;;:::i;:::-;;:::i;811:28::-;;;;;-1:-1:-1;;;;;811:28:40;;;1850:84:36;1920:7;;;;1850:84;;3299:116:27;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:27;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:25;;;:::i;2755:61:40:-;;;:::i;1638:85:25:-;1710:6;;;;;-1:-1:-1;;;;;1710:6:25;1638:85;;2276:93:27;;;:::i;1549:358:40:-;;;:::i;2203:101::-;;;;;;:::i;:::-;;:::i;3610:178:27:-;;;;;;:::i;:::-;;:::i;3846:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:27;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:25;;;;;;:::i;:::-;;:::i;2074:89:27:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:35;4420:31:27;735:10:35;4436:7:27;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:35;5182:37:27;5198:4;735:10:35;5213:5:27;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:27;;5039:244;-1:-1:-1;;;;5039:244:27:o;2885:65:40:-;1531:13:25;:11;:13::i;:::-;2932:10:40::1;:8;:10::i;:::-;2885:65::o:0;2587:101::-;1531:13:25;:11;:13::i;:::-;2661:19:40::1;2667:4;2673:6;2661:5;:19::i;:::-;2587:101:::0;;:::o;2293::25:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;2755:61:40:-:0;1531:13:25;:11;:13::i;:::-;2800:8:40::1;:6;:8::i;2276:93:27:-:0;2323:13;2355:7;2348:14;;;;;:::i;1549:358:40:-;1531:13:25;:11;:13::i;:::-;1601:15:40::1;:104:::0;;-1:-1:-1;;;;;;1601:104:40::1;1652:42;1601:104:::0;;::::1;::::0;;;1725:22:::1;::::0;;-1:-1:-1;;;1725:22:40;;;;:20:::1;::::0;:22:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;1652:42;1725:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1718:4;:29:::0;;-1:-1:-1;;;;;;1718:29:40::1;-1:-1:-1::0;;;;;1718:29:40;;::::1;;::::0;;1792:15:::1;::::0;:25:::1;::::0;;-1:-1:-1;;;1792:25:40;;;;:15;;;::::1;::::0;:23:::1;::::0;:25:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:15;:25:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1880:4;::::0;1774:125:::1;::::0;-1:-1:-1;;;1774:125:40;;1856:4:::1;1774:125;::::0;::::1;3989:34:49::0;-1:-1:-1;;;;;1880:4:40;;::::1;4039:18:49::0;;;4032:43;1774:55:40;::::1;::::0;::::1;::::0;3924:18:49;;1774:125:40::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1758:13;:141:::0;;-1:-1:-1;;;;;;1758:141:40::1;-1:-1:-1::0;;;;;1758:141:40;;;::::1;::::0;;;::::1;::::0;;1549:358::o;2203:101::-;1531:13:25;:11;:13::i;:::-;2277:19:40::1;2283:4;2289:6;2277:5;:19::i;3610:178:27:-:0;3679:4;735:10:35;3733:27:27;735:10:35;3750:2:27;3754:5;3733:9;:27::i;2543:215:25:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:25;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:25;;2700:1:::1;2672:31;::::0;::::1;1389:51:49::0;1362:18;;2672:31:25::1;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:27:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:27;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:27;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:27;;-1:-1:-1;;;;;4306:32:49;;10936:60:27;;;4288:51:49;4355:18;;;4348:34;;;4398:18;;;4391:34;;;4261:18;;10936:60:27;4086:345:49;10881:130:27;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:27;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:27;;5807:1;5780:30;;;1389:51:49;1362:18;;5780:30:27;1215:231:49;5735:86:27;-1:-1:-1;;;;;5834:16:27;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:27;;5902:1;5873:32;;;1389:51:49;1362:18;;5873:32:27;1215:231:49;5830:86:27;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:25:-;1710:6;;-1:-1:-1;;;;;1710:6:25;;;;;735:10:35;1855:23:25;1851:101;;1901:40;;-1:-1:-1;;;1901:40:25;;735:10:35;1901:40:25;;;1389:51:49;1362:18;;1901:40:25;1215:231:49;2710:117:36;1721:16;:14;:16::i;:::-;2768:7:::1;:15:::0;;-1:-1:-1;;2768:15:36::1;::::0;;2798:22:::1;735:10:35::0;2807:12:36::1;2798:22;::::0;-1:-1:-1;;;;;1407:32:49;;;1389:51;;1377:2;1362:18;2798:22:36::1;;;;;;;2710:117::o:0;7721:208:27:-;-1:-1:-1;;;;;7791:21:27;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:27;;7864:1;7835:32;;;1389:51:49;1362:18;;7835:32:27;1215:231:49;7787:91:27;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;2912:187:25:-;3004:6;;;-1:-1:-1;;;;;3020:17:25;;;3004:6;3020:17;;;-1:-1:-1;;;;;;3020:17:25;;;;;;3052:40;;3004:6;;;;;;;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2463:115:36:-;1474:19;:17;:19::i;:::-;2522:7:::1;:14:::0;;-1:-1:-1;;2522:14:36::1;2532:4;2522:14;::::0;;2551:20:::1;2558:12;735:10:35::0;;656:96;8247:206:27;-1:-1:-1;;;;;8317:21:27;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:27;;8388:1;8361:30;;;1389:51:49;1362:18;;8361:30:27;1215:231:49;8313:89:27;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;9949:432::-;-1:-1:-1;;;;;10061:19:27;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:27;;10132:1;10103:32;;;1389:51:49;1362:18;;10103:32:27;1215:231:49;10057:89:27;-1:-1:-1;;;;;10159:21:27;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:27;;10231:1;10203:31;;;1389:51:49;1362:18;;10203:31:27;1215:231:49;10155:90:27;-1:-1:-1;;;;;10254:18:27;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:27;10342:5;-1:-1:-1;;;;;10333:31:27;;10358:5;10333:31;;;;1597:25:49;;1585:2;1570:18;;1451:177;10333:31:27;;;;;;;;9949:432;;;;:::o;3226:203:40:-;1474:19:36;:17;:19::i;:::-;3391:30:40::1;3405:4;3411:2;3415:5;3391:13;:30::i;2202:126:36:-:0;1920:7;;;;2260:62;;2296:15;;-1:-1:-1;;;2296:15:36;;;;;;;;;;;2002:128;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:36;;;;;;;;;;;1112:145:30;1474:19:36;:17;:19::i;:::-;1220:30:30::1;1234:4;1240:2;1244:5;-1:-1:-1::0;;;;;6360:18:27;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:27;;-1:-1:-1;6356:540:27;;-1:-1:-1;;;;;6570:15:27;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:27;;-1:-1:-1;;;;;4306:32:49;;6649:50:27;;;4288:51:49;4355:18;;;4348:34;;;4398:18;;;4391:34;;;4261:18;;6649:50:27;4086:345:49;6599:115:27;-1:-1:-1;;;;;6834:15:27;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:27;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:27;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:27;7355:4;-1:-1:-1;;;;;7346:25:27;;7365:5;7346:25;;;;1597::49;;1585:2;1570:18;;1451:177;7346:25:27;;;;;;;;6271:1107;;;:::o;14:548:49:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:131::-;-1:-1:-1;;;;;642:31:49;;632:42;;622:70;;688:1;685;678:12;703:315;771:6;779;832:2;820:9;811:7;807:23;803:32;800:52;;;848:1;845;838:12;800:52;887:9;874:23;906:31;931:5;906:31;:::i;:::-;956:5;1008:2;993:18;;;;980:32;;-1:-1:-1;;;703:315:49:o;1633:456::-;1710:6;1718;1726;1779:2;1767:9;1758:7;1754:23;1750:32;1747:52;;;1795:1;1792;1785:12;1747:52;1834:9;1821:23;1853:31;1878:5;1853:31;:::i;:::-;1903:5;-1:-1:-1;1960:2:49;1945:18;;1932:32;1973:33;1932:32;1973:33;:::i;:::-;1633:456;;2025:7;;-1:-1:-1;;;2079:2:49;2064:18;;;;2051:32;;1633:456::o;2491:247::-;2550:6;2603:2;2591:9;2582:7;2578:23;2574:32;2571:52;;;2619:1;2616;2609:12;2571:52;2658:9;2645:23;2677:31;2702:5;2677:31;:::i;:::-;2727:5;2491:247;-1:-1:-1;;;2491:247:49:o;2743:388::-;2811:6;2819;2872:2;2860:9;2851:7;2847:23;2843:32;2840:52;;;2888:1;2885;2878:12;2840:52;2927:9;2914:23;2946:31;2971:5;2946:31;:::i;:::-;2996:5;-1:-1:-1;3053:2:49;3038:18;;3025:32;3066:33;3025:32;3066:33;:::i;:::-;3118:7;3108:17;;;2743:388;;;;;:::o;3136:380::-;3215:1;3211:12;;;;3258;;;3279:61;;3333:4;3325:6;3321:17;3311:27;;3279:61;3386:2;3378:6;3375:14;3355:18;3352:38;3349:161;;3432:10;3427:3;3423:20;3420:1;3413:31;3467:4;3464:1;3457:15;3495:4;3492:1;3485:15;3349:161;;3136:380;;;:::o;3521:251::-;3591:6;3644:2;3632:9;3623:7;3619:23;3615:32;3612:52;;;3660:1;3657;3650:12;3612:52;3692:9;3686:16;3711:31;3736:5;3711:31;:::i;4436:222::-;4501:9;;;4522:10;;;4519:133;;;4574:10;4569:3;4565:20;4562:1;4555:31;4609:4;4606:1;4599:15;4637:4;4634:1;4627:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "createPool()": "9a06b113",
    "decimals()": "313ce567",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "uniswapV2Pair()": "49bd5a5e",
    "uniswapV2Router()": "1694505e",
    "unpause()": "3f4ba83a",
    "weth()": "3fc8cef3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is SeeseaToken ERC20 token contract with pausable, and ownable features.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"Burns a specified amount of tokens from a user's balance. Only callable by the owner of the contract.\",\"params\":{\"amount\":\"The amount of tokens to be burned.\",\"user\":\"The address of the user from whose balance the tokens will be burned.\"}},\"constructor\":{\"details\":\"Constructor that initializes the contract with the initial owner and mint tokens to the initial owner\",\"params\":{\"initialOwner\":\"The initial owner of the contract.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"mint(address,uint256)\":{\"details\":\"Mints a specified amount of tokens to a user's balance. Only callable by the owner of the contract.\",\"params\":{\"amount\":\"The amount of tokens to be minted.\",\"user\":\"The address of the user to whom the tokens will be minted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pauses all token transfers.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers.\"}},\"title\":\"SeeseaToken Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SeeseaToken.sol\":\"SeeseaToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/contracts/src/\",\":@openzeppelin/=node_modules/@openzeppelin/contracts/\",\":@uniswap/contracts/interfaces/=node_modules/@uniswap/v2-periphery/\",\":@uniswap/interfaces/=node_modules/@uniswap/v2-core/contracts/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99\",\"dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"node_modules/@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"src/SeeseaToken.sol\":{\"keccak256\":\"0xd5cc7e958f62b0cfbfc6ab61d789ab831f8b27da4d39b1b02d2faff9213757fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d98edb1ad091b51cb22921c30139018ba695c5a972058e6ce944f58e2581847\",\"dweb:/ipfs/QmZbQXPE2brSR8wppBqYF33tP2YK2wW1ec4Qndv14cGSKF\"]},\"src/interfaces/IUniswapV2.sol\":{\"keccak256\":\"0x99c10c931c459207f92babbbc1f550b24a5aa78cc1ecb2c974220466f181d57f\",\"urls\":[\"bzz-raw://9f1d5b7d84180dcc38a1423aba1ee080c571b10de0077be558907140d5c075fe\",\"dweb:/ipfs/QmdCy1uwfmj6ii5LCoxTLUHeV3cEhF2XRBUvjSjscAcYXb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPool"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapV2Pair",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "uniswapV2Router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "weth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(address,uint256)": {
            "details": "Burns a specified amount of tokens from a user's balance. Only callable by the owner of the contract.",
            "params": {
              "amount": "The amount of tokens to be burned.",
              "user": "The address of the user from whose balance the tokens will be burned."
            }
          },
          "constructor": {
            "details": "Constructor that initializes the contract with the initial owner and mint tokens to the initial owner",
            "params": {
              "initialOwner": "The initial owner of the contract."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "mint(address,uint256)": {
            "details": "Mints a specified amount of tokens to a user's balance. Only callable by the owner of the contract.",
            "params": {
              "amount": "The amount of tokens to be minted.",
              "user": "The address of the user to whom the tokens will be minted."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause()": {
            "details": "Pauses all token transfers."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause()": {
            "details": "Unpauses all token transfers."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/contracts/src/",
        ":@openzeppelin/=node_modules/@openzeppelin/contracts/",
        ":@uniswap/contracts/interfaces/=node_modules/@uniswap/v2-periphery/",
        ":@uniswap/interfaces/=node_modules/@uniswap/v2-core/contracts/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SeeseaToken.sol": "SeeseaToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "keccak256": "0xb18c53aecf95e53339972e3d496a56c42e6b60a03a49ce8e6a37d3bd9d5d0a67",
        "urls": [
          "bzz-raw://4a8e54b0924a1acd92806a843998568d6bec01798c550bc440a85cfcd9cfba99",
          "dweb:/ipfs/QmZ26Y3ibYPbCRVB65NAQrGBF1UKDEu2fB8CHHMhYbBqmV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      },
      "src/SeeseaToken.sol": {
        "keccak256": "0xd5cc7e958f62b0cfbfc6ab61d789ab831f8b27da4d39b1b02d2faff9213757fa",
        "urls": [
          "bzz-raw://2d98edb1ad091b51cb22921c30139018ba695c5a972058e6ce944f58e2581847",
          "dweb:/ipfs/QmZbQXPE2brSR8wppBqYF33tP2YK2wW1ec4Qndv14cGSKF"
        ],
        "license": "MIT"
      },
      "src/interfaces/IUniswapV2.sol": {
        "keccak256": "0x99c10c931c459207f92babbbc1f550b24a5aa78cc1ecb2c974220466f181d57f",
        "urls": [
          "bzz-raw://9f1d5b7d84180dcc38a1423aba1ee080c571b10de0077be558907140d5c075fe",
          "dweb:/ipfs/QmdCy1uwfmj6ii5LCoxTLUHeV3cEhF2XRBUvjSjscAcYXb"
        ],
        "license": null
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SeeseaToken.sol",
    "id": 49627,
    "exportedSymbols": {
      "Context": [
        48438
      ],
      "ERC20": [
        47645
      ],
      "ERC20Pausable": [
        47803
      ],
      "IERC20": [
        47723
      ],
      "IERC20Errors": [
        47035
      ],
      "IERC20Metadata": [
        47829
      ],
      "IUniswapV2Factory": [
        50569
      ],
      "IUniswapV2Pair": [
        50809
      ],
      "IUniswapV2Router01": [
        51115
      ],
      "IUniswapV2Router02": [
        51200
      ],
      "Ownable": [
        46993
      ],
      "Pausable": [
        48555
      ],
      "SeeseaToken": [
        49626
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3401:40",
    "nodes": [
      {
        "id": 49469,
        "nodeType": "PragmaDirective",
        "src": "33:23:40",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 49470,
        "nodeType": "ImportDirective",
        "src": "60:45:40",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49627,
        "sourceUnit": 47646,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49471,
        "nodeType": "ImportDirective",
        "src": "107:64:40",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "file": "@openzeppelin/token/ERC20/extensions/ERC20Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49627,
        "sourceUnit": 47804,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49472,
        "nodeType": "ImportDirective",
        "src": "173:42:40",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49627,
        "sourceUnit": 46994,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49473,
        "nodeType": "ImportDirective",
        "src": "217:37:40",
        "nodes": [],
        "absolutePath": "src/interfaces/IUniswapV2.sol",
        "file": "./interfaces/IUniswapV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 49627,
        "sourceUnit": 51201,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 49626,
        "nodeType": "ContractDefinition",
        "src": "389:3043:40",
        "nodes": [
          {
            "id": 49483,
            "nodeType": "VariableDeclaration",
            "src": "737:41:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "1694505e",
            "mutability": "mutable",
            "name": "uniswapV2Router",
            "nameLocation": "763:15:40",
            "scope": 49626,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 49482,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49481,
                "name": "IUniswapV2Router02",
                "nameLocations": [
                  "737:18:40"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 51200,
                "src": "737:18:40"
              },
              "referencedDeclaration": 51200,
              "src": "737:18:40",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49485,
            "nodeType": "VariableDeclaration",
            "src": "785:19:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fc8cef3",
            "mutability": "mutable",
            "name": "weth",
            "nameLocation": "800:4:40",
            "scope": 49626,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "785:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49487,
            "nodeType": "VariableDeclaration",
            "src": "811:28:40",
            "nodes": [],
            "constant": false,
            "functionSelector": "49bd5a5e",
            "mutability": "mutable",
            "name": "uniswapV2Pair",
            "nameLocation": "826:13:40",
            "scope": 49626,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 49486,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:40",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 49516,
            "nodeType": "FunctionDefinition",
            "src": "1329:212:40",
            "nodes": [],
            "body": {
              "id": 49515,
              "nodeType": "Block",
              "src": "1429:112:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49502,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49490,
                        "src": "1458:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 49501,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46972,
                      "src": "1440:17:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 49503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:31:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49504,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:31:40"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49506,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49490,
                        "src": "1488:12:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 49512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130305f3030305f303030",
                          "id": 49507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1502:11:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000_by_1",
                            "typeString": "int_const 100000000"
                          },
                          "value": "100_000_000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 49511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 49508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1516:2:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 49509,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47209,
                              "src": "1522:8:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 49510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1522:10:40",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1516:16:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1502:30:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49505,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47485,
                      "src": "1482:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 49513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:51:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49514,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:51:40"
                }
              ]
            },
            "documentation": {
              "id": 49488,
              "nodeType": "StructuredDocumentation",
              "src": "1133:190:40",
              "text": " @dev Constructor that initializes the contract with the initial owner and mint tokens to the initial owner\n @param initialOwner The initial owner of the contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "53656573656120546f6b656e",
                    "id": 49493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1385:14:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_63dfcf41ce555ed396278828ed01067f6faff6b4adfb990fd2a3d1c1aa16c044",
                      "typeString": "literal_string \"Seesea Token\""
                    },
                    "value": "Seesea Token"
                  },
                  {
                    "hexValue": "53534149",
                    "id": 49494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1401:6:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a7787958f7f8cda7efa505ab0d39bd58fdb3034c041732e337de4f2bb41ad82c",
                      "typeString": "literal_string \"SSAI\""
                    },
                    "value": "SSAI"
                  }
                ],
                "id": 49495,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 49492,
                  "name": "ERC20",
                  "nameLocations": [
                    "1379:5:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47645,
                  "src": "1379:5:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1379:29:40"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 49497,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "1417:3:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 49498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1421:6:40",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1417:10:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 49499,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 49496,
                  "name": "Ownable",
                  "nameLocations": [
                    "1409:7:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46993,
                  "src": "1409:7:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1409:19:40"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 49491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49490,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1359:12:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49516,
                  "src": "1351:20:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:38:40"
            },
            "returnParameters": {
              "id": 49500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1429:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49549,
            "nodeType": "FunctionDefinition",
            "src": "1549:358:40",
            "nodes": [],
            "body": {
              "id": 49548,
              "nodeType": "Block",
              "src": "1590:317:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 49525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49521,
                      "name": "uniswapV2Router",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49483,
                      "src": "1601:15:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
                          "id": 49523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1652:42:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 49522,
                        "name": "IUniswapV2Router02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51200,
                        "src": "1619:18:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$51200_$",
                          "typeString": "type(contract IUniswapV2Router02)"
                        }
                      },
                      "id": 49524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1619:86:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "1601:104:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 49526,
                  "nodeType": "ExpressionStatement",
                  "src": "1601:104:40"
                },
                {
                  "expression": {
                    "id": 49531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49527,
                      "name": "weth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49485,
                      "src": "1718:4:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 49528,
                          "name": "uniswapV2Router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49483,
                          "src": "1725:15:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                            "typeString": "contract IUniswapV2Router02"
                          }
                        },
                        "id": 49529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1741:4:40",
                        "memberName": "WETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50819,
                        "src": "1725:20:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                          "typeString": "function () pure external returns (address)"
                        }
                      },
                      "id": 49530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1725:22:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1718:29:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49532,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:29:40"
                },
                {
                  "expression": {
                    "id": 49546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 49533,
                      "name": "uniswapV2Pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49487,
                      "src": "1758:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 49542,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1856:4:40",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SeeseaToken_$49626",
                                "typeString": "contract SeeseaToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SeeseaToken_$49626",
                                "typeString": "contract SeeseaToken"
                              }
                            ],
                            "id": 49541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1848:7:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 49540,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1848:7:40",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 49543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1848:13:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 49544,
                          "name": "weth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49485,
                          "src": "1880:4:40",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 49535,
                                  "name": "uniswapV2Router",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 49483,
                                  "src": "1792:15:40",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Router02_$51200",
                                    "typeString": "contract IUniswapV2Router02"
                                  }
                                },
                                "id": 49536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1808:7:40",
                                "memberName": "factory",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 50814,
                                "src": "1792:23:40",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
                                  "typeString": "function () pure external returns (address)"
                                }
                              },
                              "id": 49537,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1792:25:40",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 49534,
                            "name": "IUniswapV2Factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50569,
                            "src": "1774:17:40",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$50569_$",
                              "typeString": "type(contract IUniswapV2Factory)"
                            }
                          },
                          "id": 49538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:44:40",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$50569",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 49539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1819:10:40",
                        "memberName": "createPair",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50558,
                        "src": "1774:55:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                          "typeString": "function (address,address) external returns (address)"
                        }
                      },
                      "id": 49545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1774:125:40",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1758:141:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 49547,
                  "nodeType": "ExpressionStatement",
                  "src": "1758:141:40"
                }
              ]
            },
            "functionSelector": "9a06b113",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49519,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49518,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1580:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46904,
                  "src": "1580:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "1580:9:40"
              }
            ],
            "name": "createPool",
            "nameLocation": "1558:10:40",
            "parameters": {
              "id": 49517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1568:2:40"
            },
            "returnParameters": {
              "id": 49520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1590:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49565,
            "nodeType": "FunctionDefinition",
            "src": "2203:101:40",
            "nodes": [],
            "body": {
              "id": 49564,
              "nodeType": "Block",
              "src": "2266:38:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49560,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49552,
                        "src": "2283:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49561,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49554,
                        "src": "2289:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49559,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47518,
                      "src": "2277:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 49562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49563,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:19:40"
                }
              ]
            },
            "documentation": {
              "id": 49550,
              "nodeType": "StructuredDocumentation",
              "src": "1915:282:40",
              "text": " @dev Burns a specified amount of tokens from a user's balance.\n Only callable by the owner of the contract.\n @param user The address of the user from whose balance the tokens will be burned.\n @param amount The amount of tokens to be burned."
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49557,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49556,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2256:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46904,
                  "src": "2256:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2256:9:40"
              }
            ],
            "name": "burn",
            "nameLocation": "2212:4:40",
            "parameters": {
              "id": 49555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49552,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2225:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49565,
                  "src": "2217:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49551,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2217:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49554,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2239:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49565,
                  "src": "2231:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2231:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2216:30:40"
            },
            "returnParameters": {
              "id": 49558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2266:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49581,
            "nodeType": "FunctionDefinition",
            "src": "2587:101:40",
            "nodes": [],
            "body": {
              "id": 49580,
              "nodeType": "Block",
              "src": "2650:38:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49576,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49568,
                        "src": "2667:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49577,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49570,
                        "src": "2673:6:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 49575,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47485,
                      "src": "2661:5:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 49578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:19:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49579,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:19:40"
                }
              ]
            },
            "documentation": {
              "id": 49566,
              "nodeType": "StructuredDocumentation",
              "src": "2312:269:40",
              "text": " @dev Mints a specified amount of tokens to a user's balance.\n Only callable by the owner of the contract.\n @param user The address of the user to whom the tokens will be minted.\n @param amount The amount of tokens to be minted."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49573,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49572,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2640:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46904,
                  "src": "2640:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2640:9:40"
              }
            ],
            "name": "mint",
            "nameLocation": "2596:4:40",
            "parameters": {
              "id": 49571,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49568,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2609:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49581,
                  "src": "2601:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2601:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49570,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2623:6:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49581,
                  "src": "2615:14:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2615:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2600:30:40"
            },
            "returnParameters": {
              "id": 49574,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 49591,
            "nodeType": "FunctionDefinition",
            "src": "2755:61:40",
            "nodes": [],
            "body": {
              "id": 49590,
              "nodeType": "Block",
              "src": "2789:27:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49587,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48538,
                      "src": "2800:6:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:8:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49589,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:8:40"
                }
              ]
            },
            "documentation": {
              "id": 49582,
              "nodeType": "StructuredDocumentation",
              "src": "2696:53:40",
              "text": " @dev Pauses all token transfers."
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49584,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2779:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46904,
                  "src": "2779:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2779:9:40"
              }
            ],
            "name": "pause",
            "nameLocation": "2764:5:40",
            "parameters": {
              "id": 49583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2769:2:40"
            },
            "returnParameters": {
              "id": 49586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2789:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49601,
            "nodeType": "FunctionDefinition",
            "src": "2885:65:40",
            "nodes": [],
            "body": {
              "id": 49600,
              "nodeType": "Block",
              "src": "2921:29:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49597,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48554,
                      "src": "2932:8:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2932:10:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49599,
                  "nodeType": "ExpressionStatement",
                  "src": "2932:10:40"
                }
              ]
            },
            "documentation": {
              "id": 49592,
              "nodeType": "StructuredDocumentation",
              "src": "2824:55:40",
              "text": " @dev Unpauses all token transfers."
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49594,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2911:9:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46904,
                  "src": "2911:9:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "2911:9:40"
              }
            ],
            "name": "unpause",
            "nameLocation": "2894:7:40",
            "parameters": {
              "id": 49593,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2901:2:40"
            },
            "returnParameters": {
              "id": 49596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2921:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 49625,
            "nodeType": "FunctionDefinition",
            "src": "3226:203:40",
            "nodes": [],
            "body": {
              "id": 49624,
              "nodeType": "Block",
              "src": "3380:49:40",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 49619,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49604,
                        "src": "3405:4:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49620,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49606,
                        "src": "3411:2:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 49621,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49608,
                        "src": "3415:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 49616,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3391:5:40",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_SeeseaToken_$49626_$",
                          "typeString": "type(contract super SeeseaToken)"
                        }
                      },
                      "id": 49618,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3397:7:40",
                      "memberName": "_update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47802,
                      "src": "3391:13:40",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 49622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:30:40",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 49623,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:30:40"
                }
              ]
            },
            "baseFunctions": [
              47452,
              47802
            ],
            "documentation": {
              "id": 49602,
              "nodeType": "StructuredDocumentation",
              "src": "2958:262:40",
              "text": " @dev Overrides the ERC20 _transfer function.\n @param from The address from which tokens are transferred.\n @param to The address to which tokens are transferred.\n @param from The address from which tokens are transferred."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 49614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 49613,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "3366:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 48480,
                  "src": "3366:13:40"
                },
                "nodeType": "ModifierInvocation",
                "src": "3366:13:40"
              }
            ],
            "name": "_update",
            "nameLocation": "3235:7:40",
            "overrides": {
              "id": 49612,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 49610,
                  "name": "ERC20",
                  "nameLocations": [
                    "3344:5:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47645,
                  "src": "3344:5:40"
                },
                {
                  "id": 49611,
                  "name": "ERC20Pausable",
                  "nameLocations": [
                    "3351:13:40"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47803,
                  "src": "3351:13:40"
                }
              ],
              "src": "3335:30:40"
            },
            "parameters": {
              "id": 49609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49604,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3261:4:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49625,
                  "src": "3253:12:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49606,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3284:2:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49625,
                  "src": "3276:10:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3276:7:40",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49608,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3305:5:40",
                  "nodeType": "VariableDeclaration",
                  "scope": 49625,
                  "src": "3297:13:40",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49607,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:7:40",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3242:75:40"
            },
            "returnParameters": {
              "id": 49615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:0:40"
            },
            "scope": 49626,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49475,
              "name": "ERC20",
              "nameLocations": [
                "413:5:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47645,
              "src": "413:5:40"
            },
            "id": 49476,
            "nodeType": "InheritanceSpecifier",
            "src": "413:5:40"
          },
          {
            "baseName": {
              "id": 49477,
              "name": "ERC20Pausable",
              "nameLocations": [
                "420:13:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47803,
              "src": "420:13:40"
            },
            "id": 49478,
            "nodeType": "InheritanceSpecifier",
            "src": "420:13:40"
          },
          {
            "baseName": {
              "id": 49479,
              "name": "Ownable",
              "nameLocations": [
                "435:7:40"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46993,
              "src": "435:7:40"
            },
            "id": 49480,
            "nodeType": "InheritanceSpecifier",
            "src": "435:7:40"
          }
        ],
        "canonicalName": "SeeseaToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49474,
          "nodeType": "StructuredDocumentation",
          "src": "258:127:40",
          "text": " @title SeeseaToken Contract\n @dev This is SeeseaToken ERC20 token contract with pausable, and ownable features."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          49626,
          46993,
          47803,
          48555,
          47645,
          47035,
          47829,
          47723,
          48438
        ],
        "name": "SeeseaToken",
        "nameLocation": "398:11:40",
        "scope": 49627,
        "usedErrors": [
          46859,
          46864,
          47005,
          47010,
          47015,
          47024,
          47029,
          47034,
          48460,
          48463
        ],
        "usedEvents": [
          46870,
          47657,
          47666,
          48452,
          48457
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 40
}